name: CI

on:
  push:
    branches: [main]
    tags:
      - v*
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend, frontend]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json
      - run: npm ci
      - run: npm run lint --if-present

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rflandscaperpro
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: backend
            name: unit
            command: npm test
          - project: backend
            name: e2e
            command: npm run test:e2e
          - project: frontend
            name: unit
            command: npm test
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json
      - run: npm ci
      - name: Run tests
        run: ${{ matrix.command }}
        env:
          CI: true
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: rflandscaperpro
          JWT_SECRET: testsecret

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    strategy:
      matrix:
        include:
          - project: backend
            build_cmd: npm run build
          - project: frontend
            build_cmd: npm run build:ssr:ci
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ matrix.project }}/package-lock.json
      - run: npm ci
      - name: Build (${{ matrix.project }})
        run: ${{ matrix.build_cmd }}
        env:
          CI: true
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Build production image
        if: matrix.project == 'backend' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
        run: docker build .
