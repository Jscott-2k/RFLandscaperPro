{
  "name": "rflandscaperpro-backend",
  "version": "0.0.1",
  "description": "Backend API for RF Landscaper Pro",
  "author": "Justin Scott <justinscott2k@gmail.com>",
  "private": true,
  "license": "MIT",
  "scripts": {
    "prebuild": "npm run build -w @rflp/shared",
    "build": "npx tsc -p tsconfig.build.json",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "node dist/main.js",
    "start:dev": "cross-env NODE_ENV=development nest start --watch -p tsconfig.dev.json",
    "start:debug": "cross-env NODE_ENV=development nest start --debug --watch -p tsconfig.dev.json",
    "start:prod": "cross-env NODE_ENV=production node dist/main.js",
    "dev:compose": "docker compose -f docker-compose.yml -f docker-compose.override.yml up --build",
    "lint": "eslint . --fix",
    "test": "cross-env NODE_ENV=test jest",
    "test:cov": "cross-env NODE_ENV=test jest --coverage",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "cross-env NODE_ENV=test jest --config ./test/jest-e2e.json",
    "test:watch": "cross-env NODE_ENV=test jest --watch",
    "migration:create": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:create",
    "migration:generate": "node scripts/generate-migration.mjs",
    "migration:run": "cross-env NODE_ENV=development NODE_OPTIONS=\"--require reflect-metadata --require ts-node/register --require tsconfig-paths/register\" npx typeorm-ts-node-commonjs migration:run -d src/data-source.ts",
    "migration:revert": "cross-env NODE_ENV=development NODE_OPTIONS=\"--require reflect-metadata --require ts-node/register --require tsconfig-paths/register\" npx typeorm-ts-node-commonjs migration:revert -d src/data-source.ts",
    "migration:show": "cross-env NODE_ENV=development NODE_OPTIONS=\"--require reflect-metadata --require ts-node/register --require tsconfig-paths/register\" npx typeorm-ts-node-commonjs migration:show -d src/data-source.ts",
    "migration:create:dev": "cross-env NODE_ENV=development npm run migration:create --",
    "migration:generate:dev": "cross-env NODE_ENV=development npm run migration:generate --",
    "migration:revert:dev": "cross-env NODE_ENV=development npm run migration:revert --",
    "seed": "ts-node -r tsconfig-paths/register src/seed.ts",
    "seed:dev": "cross-env NODE_ENV=development npm run seed",
    "seed:drop": "ts-node -r tsconfig-paths/register src/seed.ts --drop",
    "seed:drop:dev": "cross-env NODE_ENV=development npm run seed:drop"
  },
  "dependencies": {
    "@rflp/shared": "file:../shared",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^11.0.0",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv": "^17.2.1",
    "express-basic-auth": "^1.2.1",
    "joi": "^17.13.3",
    "nest-winston": "^1.10.2",
    "nodemailer": "^7.0.6",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.26",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.10",
    "@nestjs/testing": "^11.1.6",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.18.0",
    "@types/nodemailer": "^7.0.1",
    "@types/passport-jwt": "^3.0.9",
    "@types/supertest": "^6.0.2",
    "cross-env": "^10.0.0",
    "jest": "^29.7.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.4.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "moduleNameMapper": {
      "^@rflp/shared(.*)$": "<rootDir>/../../shared/src$1"
    },
    "globals": {
      "ts-jest": {
        "tsconfig": "<rootDir>/../tsconfig.spec.json"
      }
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
